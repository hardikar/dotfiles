<?xml version="1.0"?>
<!-- Look for implementations on the Karabiner github page https://github.com/tekezo/Karabiner -->
<root>
<item>
    <name>Vi arrows</name>
    <appendix>CTRL+ hjkl act as arrow keys in all applications.</appendix>

    <identifier>private.vi_arrows</identifier>

    <!-- This is the basic mapping. -->
    <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CURSOR_LEFT</autogen>
    <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CURSOR_DOWN</autogen>
    <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CURSOR_UP</autogen>
    <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT</autogen>
    <!-- This is the mapping with CMD modifier. -->
    <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT  | ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN  | ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L, KeyCode::CURSOR_UP    | ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT | ModifierFlag::COMMAND_L</autogen>

    <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT  | ModifierFlag::COMMAND_R</autogen>
    <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_R, KeyCode::CURSOR_DOWN  | ModifierFlag::COMMAND_R</autogen>
    <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_R, KeyCode::CURSOR_UP    | ModifierFlag::COMMAND_R</autogen>
    <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_R, KeyCode::CURSOR_RIGHT | ModifierFlag::COMMAND_R</autogen>
</item>
<item>
    <name>Ctrl to Hyper</name>
    <appendix>Changes the ctrl keys to Hyper (CMD+SHIFT+OPT+CTRL)</appendix>
    <identifier>private.ctrl_to_hyper</identifier>

    <autogen>__KeyToKey__ 
        KeyCode::CONTROL_L, 
        KeyCode::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L 
    </autogen>
</item>
<item>
      <name>F18 to ` (Tmux prefix) and R-Shift</name>
      <appendix>Tap F18 for `, Hold F18 for R-Shift</appendix>
      <appendix>Works well with using Seil to remap SHIFT_R to F18(code 79).</appendix>
      <identifier>private.remap.f18_backquote_shiftr</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F18,
        KeyCode::SHIFT_R,
        KeyCode::BACKQUOTE
      </autogen>
    </item>
</root>
